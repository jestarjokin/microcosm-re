//
// +-------------------------------------------------------------------------+
// |     This file is generated by The Interactive Disassembler (IDA)        |
// |     Copyright (c) 2007 by DataRescue sa/nv, <ida@datarescue.com>        |
// |                      Licensed to: Freeware version                      |
// +-------------------------------------------------------------------------+
//
//
//      This file should be used in the following way:
//         - reload executable into IDA with using switch -c
//         - use File, Load IDC file and load this file.
//
//      NOTE: This file doesn't contain all information from the database.
//

#define UNLOADED_FILE   1
#include <idc.idc>

static main(void) {
        GenInfo();              // various settings
        Segments();             // segmentation
        Enums();                // enumerations
        Structures();           // structure types
        Bytes();                // individual bytes (code,data)
        Functions();            // function definitions
        SegRegs();              // segment register values
}

//------------------------------------------------------------------------
// General information

static GenInfo(void) {

        DeleteAll();    // purge database
	SetPrcsr("80386r");
	StringStp(0xA);
	Tabs(1);
	Comments(0);
	Voids(0);
	XrefShow(2);
	AutoShow(1);
	Indent(16);
	CmtIndent(40);
	TailDepth(0x10);
}

//------------------------------------------------------------------------
// Information about segmentation

static Segments(void) {
	;
	SegCreate(0X0,0X800,0X0,0,1,5);
	SegRename(0X0,"seg000");
	SegClass (0X0,"STACK");
	SetSegmentType(0X0,9);
	SegCreate(0X800,0X8C20,0X80,0,1,2);
	SegRename(0X800,"seg001");
	SegClass (0X800,"CODE");
	SetSegmentType(0X800,2);
	LowVoids(0x20);
	HighVoids(0x8420);
}

//------------------------------------------------------------------------
// Information about enum types

static Enums(void) {
        auto id;
}

//------------------------------------------------------------------------
// Information about structure types

static Structures(void) {
        auto id;
}

//------------------------------------------------------------------------
// Information about bytes

static Bytes_0(void) {
        auto x;
#define id x

	ExtLinA		(0X0,	0,	"; File Name   : E:\\robin\\work\\ISOVGAU.EXE");
	ExtLinA		(0X0,	1,	"; Format      : MS-DOS executable (EXE)");
	ExtLinA		(0X0,	2,	"; Base Address: 0h Range: 0h-8C20h Loaded length: 8C20h");
	ExtLinA		(0X0,	3,	"; Entry Point : 80:23BB");
	MakeByte	(0X0);
	MakeArray	(0X0,	0X800);
	MakeWord	(0X800);
	MakeWord	(0X802);
	MakeStr		(0X2917,	0X294B);
	MakeName	(0X2917,	"aThisEngineIsCopyrightS_");
	MakeWord	(0X294C);
	MakeDword	(0X294E);
	MakeDword	(0X2952);
	MakeDword	(0X2956);
	MakeDword	(0X295A);
	MakeDword	(0X295E);
	MakeDword	(0X296A);
	MakeDword	(0X296E);
	MakeDword	(0X2972);
	MakeName	(0X297A,	"ruleDataStrings");
	MakeDword	(0X2996);
	MakeStr		(0X29A9,	0X29B4);
	MakeName	(0X29A9,	"aCubes0_gfx");
	MakeStr		(0X29B4,	0X29BC);
	MakeName	(0X29B4,	"aMen_vga");
	MakeStr		(0X29BC,	0X29C5);
	MakeName	(0X29BC,	"aMen2_vga");
	MakeStr		(0X29C5,	0X29D0);
	MakeName	(0X29C5,	"aIsomap_dta");
	MakeStr		(0X29D0,	0X29DB);
	MakeName	(0X29D0,	"aScreen_gfx_0");
	MakeStr		(0X29DB,	0X29E6);
	MakeName	(0X29DB,	"aErules_prg");
	MakeStr		(0X29E6,	0X29F3);
	MakeName	(0X29E6,	"aIsochars_vga");
	MakeStr		(0X29F3,	0X2A00);
	MakeName	(0X29F3,	"aIdeogram_vga");
	MakeByte	(0X2A04);
	MakeByte	(0X2A05);
	MakeByte	(0X2A06);
	MakeByte	(0X2A07);
	MakeByte	(0X2A08);
	MakeByte	(0X2A09);
	MakeByte	(0X2A37);
	MakeDword	(0X2A38);
	MakeByte	(0X2A3C);
	MakeByte	(0X2A3D);
	MakeArray	(0X2A3D,	0X17E);
	MakeCode	(0X2BBB);
	MakeName	(0X2BBB,	"start");
	MakeComm	(0X2BC5,	"DOS - 2+ - ADJUST MEMORY BLOCK SIZE (SETBLOCK)\nES = segment address of block to change\nBX = new size in paragraphs");
	MakeCode	(x=0X2BC5);
	OpHex		(x,	0);
	MakeComm	(0X2BF2,	"DOS - SET INTERRUPT VECTOR\nAL = interrupt number\nDS:DX = new vector to be used for specified interrupt");
	MakeCode	(x=0X2BF2);
	OpHex		(x,	0);
	MakeComm	(0X2C0A,	"- VIDEO - SET VIDEO MODE\nAL = mode");
	MakeCode	(x=0X2C0A);
	OpHex		(x,	0);
	MakeCode	(x=0X2C0C);
	OpHex		(x,	1);
	MakeComm	(0X2C0F,	"DOS - 2+ - QUIT WITH EXIT CODE (EXIT)\nAL = exit code");
	MakeCode	(x=0X2C0F);
	OpHex		(x,	0);
	MakeDword	(0X2C11);
	MakeCode	(x=0X2C15);
	OpHex		(x,	1);
	MakeName	(0X2C15,	"setInterrupts");
	MakeComm	(0X2C18,	"DOS - 2+ - GET INTERRUPT VECTOR\nAL = interrupt number\nReturn: ES:BX = value of interrupt vector");
	MakeCode	(x=0X2C18);
	OpHex		(x,	0);
	MakeCode	(x=0X2C22);
	OpSeg		(x,	1);
	MakeCode	(x=0X2C2A);
	OpHex		(x,	1);
	MakeComm	(0X2C2D,	"DOS - SET INTERRUPT VECTOR\nAL = interrupt number\nDS:DX = new vector to be used for specified interrupt");
	MakeCode	(x=0X2C2D);
	OpHex		(x,	0);
	MakeCode	(0X2C34);
	MakeCode	(x=0X2C39);
	OpHex		(x,	1);
	MakeComm	(0X2C3C,	"DOS - SET INTERRUPT VECTOR\nAL = interrupt number\nDS:DX = new vector to be used for specified interrupt");
	MakeCode	(x=0X2C3C);
	OpHex		(x,	0);
	MakeCode	(0X2C40);
	MakeComm	(0X2C43,	"- VIDEO - SET VIDEO MODE\nAL = mode");
	MakeCode	(x=0X2C43);
	OpHex		(x,	0);
	MakeCode	(0X2C46);
	MakeName	(0X2C46,	"allocateMemoryLocs");
	MakeCode	(0X2CA1);
	MakeName	(0X2CA1,	"gameInit");
	MakeCode	(0X2D1C);
	MakeCode	(0X2D31);
	MakeWord	(0X2D3D);
	MakeWord	(0X2D3F);
	MakeByte	(0X2D41);
	MakeCode	(0X2D42);
	MakeComm	(0X2D51,	"AT Keyboard controller 8042.");
	MakeCode	(x=0X2D51);
	OpHex		(x,	1);
	MakeComm	(0X2D79,	"PC/XT PPI port B bits:\n0: Tmr 2 gate ÍËÍ\x10 OR 03H=spkr ON\n1: Tmr 2 data Í¼  AND 0fcH=spkr OFF\n3: 1=read high switches\n4: 0=enable RAM parity checking\n5: 0=enable I/O channel check\n6: 0=hold keyboard clock low\n7: 0=enable kbrd");
	MakeCode	(x=0X2D79);
	OpHex		(x,	1);
	MakeCode	(x=0X2D7D);
	OpHex		(x,	1);
	MakeComm	(0X2D81,	"PC/XT PPI port B bits:\n0: Tmr 2 gate ÍËÍ\x10 OR 03H=spkr ON\n1: Tmr 2 data Í¼  AND 0fcH=spkr OFF\n3: 1=read high switches\n4: 0=enable RAM parity checking\n5: 0=enable I/O channel check\n6: 0=hold keyboard clock low\n7: 0=enable kbrd");
	MakeCode	(x=0X2D81);
	OpHex		(x,	0);
	MakeComm	(0X2D87,	"PC/XT PPI port B bits:\n0: Tmr 2 gate ÍËÍ\x10 OR 03H=spkr ON\n1: Tmr 2 data Í¼  AND 0fcH=spkr OFF\n3: 1=read high switches\n4: 0=enable RAM parity checking\n5: 0=enable I/O channel check\n6: 0=hold keyboard clock low\n7: 0=enable kbrd");
	MakeCode	(x=0X2D87);
	OpHex		(x,	0);
	MakeComm	(0X2D8B,	"Interrupt controller, 8259A.");
	MakeCode	(x=0X2D8B);
	OpHex		(x,	0);
	MakeCode	(0X2D98);
	MakeCode	(0X2DB5);
	MakeCode	(0X2DBD);
	MakeCode	(0X2DC6);
	MakeName	(0X2DC6,	"allocateMemory");
	MakeCode	(x=0X2DC7);
	OpHex		(x,	1);
	MakeCode	(x=0X2DC9);
	OpHex		(x,	1);
	MakeCode	(x=0X2DCB);
	OpHex		(x,	1);
	MakeCode	(x=0X2DCD);
	OpHex		(x,	1);
	MakeCode	(x=0X2DD0);
	OpHex		(x,	1);
	MakeComm	(0X2DD2,	"DOS - 2+ - ALLOCATE MEMORY\nBX = number of 16-byte paragraphs desired");
	MakeCode	(x=0X2DD2);
	OpHex		(x,	0);
	MakeCode	(x=0X2DDF);
	OpHex		(x,	1);
	MakeComm	(0X2DE2,	"DOS - 2+ - QUIT WITH EXIT CODE (EXIT)\nAL = exit code");
	MakeCode	(x=0X2DE2);
	OpHex		(x,	0);
	MakeCode	(0X2DE4);
	MakeName	(0X2DE4,	"getTime");
	MakeComm	(0X2DE6,	"CLOCK - GET TIME OF DAY\nReturn: CX:DX = clock count\nAL = 00h if clock was read or written (via AH=0,1) since the previous\nmidnight\nOtherwise, AL > 0");
	MakeCode	(x=0X2DE6);
	OpHex		(x,	0);
	MakeWord	(0X2DED);
	MakeCode	(0X2DEF);
	MakeName	(0X2DEF,	"drawChar?");
	MakeCode	(0X2DF6);
	MakeCode	(0X2E11);
	MakeName	(0X2E11,	"int1");
	MakeCode	(x=0X2E1F);
	OpHex		(x,	1);
	MakeName	(0X2E2B,	"callIntCon8259A");
	MakeComm	(0X2E3C,	"Interrupt controller, 8259A.");
	MakeCode	(x=0X2E3C);
	OpHex		(x,	0);
	MakeCode	(0X2E6B);
	MakeCode	(x=0X2E7B);
	OpHex		(x,	1);
	MakeCode	(0X2E9A);
	MakeName	(0X2E9A,	"initInterrupts");
	MakeComm	(0X2E9C,	"Timer 8253-5 (AT: 8254.2).");
	MakeCode	(x=0X2E9C);
	OpHex		(x,	0);
	MakeComm	(0X2EA0,	"Timer 8253-5 (AT: 8254.2).");
	MakeCode	(x=0X2EA0);
	OpHex		(x,	0);
	MakeComm	(0X2EA4,	"Timer 8253-5 (AT: 8254.2).");
	MakeCode	(x=0X2EA4);
	OpHex		(x,	0);
	MakeCode	(x=0X2EA6);
	OpHex		(x,	1);
	MakeComm	(0X2EA9,	"DOS - 2+ - GET INTERRUPT VECTOR\nAL = interrupt number\nReturn: ES:BX = value of interrupt vector");
	MakeCode	(x=0X2EA9);
	OpHex		(x,	0);
	MakeCode	(x=0X2EB3);
	OpSeg		(x,	1);
	MakeCode	(x=0X2EBB);
	OpHex		(x,	1);
	MakeComm	(0X2EBE,	"DOS - SET INTERRUPT VECTOR\nAL = interrupt number\nDS:DX = new vector to be used for specified interrupt");
	MakeCode	(x=0X2EBE);
	OpHex		(x,	0);
	MakeCode	(0X2EC5);
	MakeName	(0X2EC5,	"restoreInterrupts");
	MakeComm	(0X2EC7,	"Timer 8253-5 (AT: 8254.2).");
	MakeCode	(x=0X2EC7);
	OpHex		(x,	0);
	MakeComm	(0X2ECB,	"Timer 8253-5 (AT: 8254.2).");
	MakeCode	(x=0X2ECB);
	OpHex		(x,	0);
	MakeComm	(0X2ECD,	"Timer 8253-5 (AT: 8254.2).");
	MakeCode	(x=0X2ECD);
	OpHex		(x,	0);
	MakeCode	(x=0X2ED4);
	OpHex		(x,	1);
	MakeComm	(0X2ED7,	"DOS - SET INTERRUPT VECTOR\nAL = interrupt number\nDS:DX = new vector to be used for specified interrupt");
	MakeCode	(x=0X2ED7);
	OpHex		(x,	0);
	MakeCode	(0X2EDB);
	MakeName	(0X2EDB,	"bigCaller1");
	MakeCode	(0X2EE4);
	MakeCode	(0X2F14);
	MakeCode	(0X2F37);
	MakeName	(0X2F37,	"bc1sub6");
	MakeCode	(0X2F57);
	MakeByte	(0X2F68);
	MakeArray	(0X2F68,	0X7D);
	MakeCode	(0X2FE5);
	MakeName	(0X2FE5,	"bc1sub11");
	MakeCode	(0X2FED);
	MakeCode	(0X3005);
	MakeCode	(0X3008);
	MakeCode	(0X3017);
	MakeCode	(0X301F);
	MakeCode	(x=0X302C);
	OpHex		(x,	1);
	MakeCode	(x=0X302E);
	OpHex		(x,	1);
	MakeCode	(x=0X3032);
	OpHex		(x,	1);
	MakeCode	(x=0X3034);
	OpHex		(x,	1);
	MakeCode	(0X3046);
	MakeCode	(x=0X3048);
	OpHex		(x,	1);
	MakeCode	(0X305C);
	MakeCode	(0X3068);
	MakeCode	(0X307C);
	MakeCode	(0X3088);
	MakeCode	(0X3092);
	MakeCode	(0X30AF);
	MakeCode	(0X30B6);
	MakeName	(0X30B6,	"glSub1_related5");
	MakeCode	(0X30DD);
	MakeName	(0X30DD,	"glSub1_related4");
	MakeCode	(0X30EE);
	MakeName	(0X30EE,	"bc1sub10");
	MakeCode	(0X3103);
	MakeCode	(0X3123);
	MakeCode	(0X312A);
	MakeCode	(0X313B);
	MakeCode	(0X3142);
	MakeCode	(0X3148);
	MakeCode	(0X314F);
	MakeCode	(0X3156);
	MakeCode	(x=0X3160);
	OpHex		(x,	1);
	MakeCode	(x=0X3178);
	OpHex		(x,	1);
	MakeCode	(0X3184);
	MakeCode	(x=0X318F);
	OpHex		(x,	1);
	MakeCode	(0X31A7);
	MakeCode	(x=0X31A9);
	OpHex		(x,	1);
	MakeCode	(0X31B2);
	MakeCode	(0X31F8);
	MakeCode	(0X31FC);
	MakeCode	(x=0X3214);
	OpHex		(x,	1);
	MakeCode	(0X3240);
	MakeCode	(0X325D);
	MakeName	(0X325D,	"loadISOMap");
	MakeCode	(x=0X3267);
	OpStkvar	(x,	1);
	MakeCode	(x=0X326D);
	OpHex		(x,	1);
	MakeComm	(0X3270,	"DOS - 2+ - OPEN DISK FILE WITH HANDLE\nDS:DX -> ASCIZ filename\nAL = access mode\n0 - read");
	MakeCode	(x=0X3270);
	OpHex		(x,	0);
	MakeCode	(x=0X3277);
	OpStkvar	(x,	1);
	MakeCode	(x=0X327D);
	OpStkvar	(x,	1);
	MakeCode	(x=0X3280);
	OpStkvar	(x,	1);
	MakeComm	(0X3283,	"DOS - 2+ - READ FROM FILE WITH HANDLE\nBX = file handle, CX = number of bytes to read\nDS:DX -> buffer");
	MakeCode	(x=0X3283);
	OpHex		(x,	0);
	MakeCode	(x=0X3287);
	OpHex		(x,	1);
	MakeComm	(0X3289,	"DOS - 2+ - CLOSE A FILE WITH HANDLE\nBX = file handle");
	MakeCode	(x=0X3289);
	OpHex		(x,	0);
	MakeCode	(0X3296);
	MakeName	(0X3296,	"loadVGAData");
	MakeCode	(x=0X32A0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X32AA);
	OpStkvar	(x,	0);
	MakeCode	(x=0X32C0);
	OpStkvar	(x,	1);
	MakeCode	(x=0X32C3);
	OpStkvar	(x,	1);
	MakeCode	(x=0X32CD);
	OpHex		(x,	1);
	MakeCode	(x=0X32D9);
	OpStkvar	(x,	1);
	MakeCode	(0X32EA);
	MakeCode	(x=0X32EC);
	OpHex		(x,	1);
	MakeCode	(x=0X32F3);
	OpStkvar	(x,	1);
	MakeCode	(0X3303);
	MakeWord	(0X3311);
	MakeName	(0X3311,	"FileHandle");
	MakeCode	(0X3313);
	MakeName	(0X3313,	"canOpenFile?");
	MakeCode	(x=0X331E);
	OpHex		(x,	1);
	MakeComm	(0X3321,	"DOS - 2+ - OPEN DISK FILE WITH HANDLE\nDS:DX -> ASCIZ filename\nAL = access mode\n0 - read");
	MakeCode	(x=0X3321);
	OpHex		(x,	0);
	MakeCode	(0X3338);
	MakeName	(0X3338,	"closeFile");
	MakeCode	(x=0X333C);
	OpHex		(x,	1);
	MakeComm	(0X333E,	"DOS - 2+ - CLOSE A FILE WITH HANDLE\nBX = file handle");
	MakeCode	(x=0X333E);
	OpHex		(x,	0);
	MakeByte	(0X3341);
	MakeArray	(0X3341,	0X1004);
	MakeCode	(0X4345);
	MakeName	(0X4345,	"readByteBuffered");
	MakeCode	(0X435A);
	MakeComm	(0X4369,	"DOS - 2+ - READ FROM FILE WITH HANDLE\nBX = file handle, CX = number of bytes to read\nDS:DX -> buffer");
	MakeCode	(x=0X4369);
	OpHex		(x,	0);
	MakeCode	(0X437A);
	MakeName	(0X437A,	"readWordAX");
	MakeCode	(0X4389);
	MakeName	(0X4389,	"createFile");
	MakeComm	(0X438E,	"DOS - 2+ - CREATE A FILE WITH HANDLE (CREAT)\nCX = attributes for file\nDS:DX -> ASCIZ filename (may include drive and path)");
	MakeCode	(x=0X438E);
	OpHex		(x,	0);
	MakeCode	(0X439A);
	MakeName	(0X439A,	"writeToFile");
	MakeComm	(0X43A9,	"DOS - 2+ - WRITE TO FILE WITH HANDLE\nBX = file handle, CX = number of bytes to write, DS:DX -> buffer");
	MakeCode	(x=0X43A9);
	OpHex		(x,	0);
	MakeCode	(x=0X43AF);
	OpHex		(x,	1);
	MakeComm	(0X43B1,	"DOS - 2+ - CLOSE A FILE WITH HANDLE\nBX = file handle");
	MakeCode	(x=0X43B1);
	OpHex		(x,	0);
	MakeCode	(0X43B4);
	MakeComm	(0X43D4,	"DOS - 2+ - WRITE TO FILE WITH HANDLE\nBX = file handle, CX = number of bytes to write, DS:DX -> buffer");
	MakeCode	(x=0X43D4);
	OpHex		(x,	0);
	MakeCode	(0X43F0);
	MakeCode	(0X43F9);
	MakeName	(0X43F9,	"loadRulesFile");
	MakeCode	(0X442A);
	MakeName	(0X442A,	"R1read2176IntoMem");
	MakeCode	(0X4434);
	MakeName	(0X4434,	"R2sub_14434");
	MakeCode	(x=0X44BA);
	OpHex		(x,	1);
	MakeCode	(x=0X44BC);
	OpHex		(x,	1);
	MakeCode	(x=0X44BE);
	OpHex		(x,	1);
	MakeCode	(x=0X44C0);
	OpHex		(x,	1);
	MakeCode	(x=0X44D1);
	OpHex		(x,	1);
	MakeCode	(x=0X44D3);
	OpHex		(x,	1);
	MakeCode	(x=0X44D5);
	OpHex		(x,	1);
	MakeCode	(x=0X44D7);
	OpHex		(x,	1);
	MakeCode	(0X44F0);
	MakeCode	(0X44F1);
	MakeName	(0X44F1,	"R3sub_144F1");
	MakeCode	(x=0X44FE);
	OpHex		(x,	1);
	MakeCode	(0X450E);
	MakeName	(0X450E,	"R4read2184IntoMem");
	MakeCode	(x=0X4511);
	OpHex		(x,	1);
	MakeCode	(0X451A);
	MakeName	(0X451A,	"R5read2188IntoMem");
	MakeCode	(x=0X451D);
	OpHex		(x,	1);
	MakeCode	(0X4526);
	MakeName	(0X4526,	"R6sub_14526");
	MakeCode	(x=0X452C);
	OpHex		(x,	1);
	MakeCode	(0X453E);
	MakeName	(0X453E,	"R7sub_1453E");
	MakeCode	(0X454D);
	MakeName	(0X454D,	"R8sub_1454D");
	MakeCode	(0X4577);
	MakeName	(0X4577,	"R9sub_14577");
	MakeWord	(0X45A2);
	MakeCode	(0X45BC);
	MakeName	(0X45BC,	"R10sub_145BC");
	MakeCode	(0X4604);
	MakeCode	(0X460C);
	MakeCode	(0X4615);
	MakeName	(0X4615,	"readIntoMemory");
	MakeStr		(0X4625,	0X4630);
	MakeName	(0X4625,	"aStatus_dta");
	MakeStr		(0X4630,	0X463B);
	MakeName	(0X4630,	"aScreen_gfx");
	MakeByte	(0X463B);
	MakeArray	(0X463B,	0X31);
	MakeCode	(0X466C);
	MakeName	(0X466C,	"loadScreenAndStatus");
	MakeCode	(0X467B);
	MakeComm	(0X4688,	"DOS - 2+ - READ FROM FILE WITH HANDLE\nBX = file handle, CX = number of bytes to read\nDS:DX -> buffer");
	MakeCode	(x=0X4688);
	OpHex		(x,	0);
	MakeComm	(0X469A,	"DOS - 2+ - READ FROM FILE WITH HANDLE\nBX = file handle, CX = number of bytes to read\nDS:DX -> buffer");
	MakeCode	(x=0X469A);
	OpHex		(x,	0);
	MakeCode	(0X46A5);
	MakeCode	(x=0X46A8);
	OpHex		(x,	1);
	MakeComm	(0X46AA,	"DOS - 2+ - DELETE A FILE (UNLINK)\nDS:DX -> ASCIZ pathname of file to delete (no wildcards allowed)");
	MakeCode	(x=0X46AA);
	OpHex		(x,	0);
	MakeCode	(0X46AD);
	MakeName	(0X46AF,	"initMouse");
	MakeCode	(x=0X46B3);
	OpHex		(x,	1);
	MakeComm	(0X46B6,	"DOS - 2+ - GET INTERRUPT VECTOR\nAL = interrupt number\nReturn: ES:BX = value of interrupt vector");
	MakeCode	(x=0X46B6);
	OpHex		(x,	0);
	MakeName	(0X46C5,	"noMouseFound");
	MakeComm	(0X46CB,	"- VIDEO - SET VIDEO MODE\nAL = mode");
	MakeCode	(x=0X46CB);
	OpHex		(x,	0);
	MakeCode	(x=0X46D0);
	OpHex		(x,	1);
	MakeComm	(0X46D2,	"DOS - PRINT STRING\nDS:DX -> string terminated by \"$\"");
	MakeCode	(x=0X46D2);
	OpHex		(x,	0);
	MakeCode	(x=0X46D4);
	OpHex		(x,	1);
	MakeComm	(0X46D7,	"DOS - 2+ - QUIT WITH EXIT CODE (EXIT)\nAL = exit code");
	MakeCode	(x=0X46D7);
	OpHex		(x,	0);
	MakeStr		(0X46D9,	0X46E3);
	MakeName	(0X46D9,	"aNoMouse");
	MakeCode	(0X46E3);
	MakeName	(0X46E3,	"resetMouseDriver");
	MakeComm	(0X46E5,	"- MS MOUSE - RESET DRIVER AND READ STATUS\nReturn: AX = status\nBX = number of buttons");
	MakeCode	(x=0X46E5);
	OpHex		(x,	0);
	MakeComm	(0X46F4,	"- MS MOUSE - DEFINE INTERRUPT SUBROUTINE PARAMETERS\nCX = call mask, ES:DX -> FAR routine");
	MakeCode	(x=0X46F4);
	OpHex		(x,	0);
	MakeCode	(0X46F7);
	MakeComm	(0X46FC,	"- MS MOUSE - DEFINE INTERRUPT SUBROUTINE PARAMETERS\nCX = call mask, ES:DX -> FAR routine");
	MakeCode	(x=0X46FC);
	OpHex		(x,	0);
	MakeByte	(0X46FF);
	MakeCode	(0X4700);
	MakeCode	(x=0X471C);
	OpHex		(x,	1);
	MakeCode	(x=0X4723);
	OpHex		(x,	1);
	MakeCode	(0X4739);
	MakeByte	(0X475C);
	MakeArray	(0X475C,	0X5);
	MakeCode	(0X4761);
	MakeCode	(0X477C);
	MakeCode	(0X47BE);
	MakeArray	(0X47D1,	0X3);
	MakeWord	(0X47D4);
	MakeByte	(0X47D6);
	MakeCode	(0X47D7);
	MakeCode	(0X47E2);
	MakeCode	(0X47F6);
	MakeCode	(0X4813);
	MakeStr		(0X482D,	0X4833);
	MakeName	(0X482D,	"aStudy");
	MakeByte	(0X4833);
	MakeArray	(0X4833,	0X3);
	MakeCode	(0X4836);
	MakeName	(0X4836,	"nullsub_1");
	MakeStr		(0X4898,	0X48C9);
	MakeName	(0X4898,	"aPlaceTheGaDisc");
	MakeStr		(0X48CA,	0X48D5);
	MakeName	(0X48CA,	"aStatus_dta_0");
	MakeStr		(0X48D5,	0X48E0);
	MakeName	(0X48D5,	"aErules_prg_0");
	MakeStr		(0X48E0,	0X48EB);
	MakeName	(0X48E0,	"aFrules_prg");
	MakeStr		(0X48EB,	0X48F6);
	MakeName	(0X48EB,	"aGrules_prg");
	MakeStr		(0X48F6,	0X4901);
	MakeName	(0X48F6,	"aIrules_prg");
	MakeStr		(0X4901,	0X490C);
	MakeName	(0X4901,	"aIsomap_dta_0");
	MakeStr		(0X490C,	0X4914);
	MakeName	(0X490C,	"aMen_vga_0");
	MakeStr		(0X4914,	0X491D);
	MakeName	(0X4914,	"aMen2_vga_0");
	MakeStr		(0X491D,	0X4928);
	MakeName	(0X491D,	"aScreen_gfx_1");
	MakeStr		(0X4928,	0X4935);
	MakeName	(0X4928,	"aIsochars_vga_0");
	MakeStr		(0X4935,	0X4A36);
	MakeName	(0X4935,	"aIdeogram_vgaCu");
	MakeCode	(0X4A36);
	MakeName	(0X4A36,	"openAndCloseFile");
	MakeCode	(x=0X4A40);
	OpHex		(x,	1);
	MakeComm	(0X4A43,	"DOS - 2+ - OPEN DISK FILE WITH HANDLE\nDS:DX -> ASCIZ filename\nAL = access mode\n0 - read");
	MakeCode	(x=0X4A43);
	OpHex		(x,	0);
	MakeCode	(x=0X4A49);
	OpHex		(x,	1);
	MakeComm	(0X4A4B,	"DOS - 2+ - CLOSE A FILE WITH HANDLE\nBX = file handle");
	MakeCode	(x=0X4A4B);
	OpHex		(x,	0);
	MakeCode	(0X4A58);
	MakeCode	(0X4A78);
	MakeCode	(0X4A8A);
	MakeStr		(0X4A96,	0X4B00);
	MakeName	(0X4A96,	"aPleaseTypeWordFromParag");
	MakeCode	(0X4BCB);
	MakeName	(0X4BCB,	"printDosString?");
	MakeCode	(x=0X4BD3);
	OpHex		(x,	1);
	MakeCode	(x=0X4BEA);
	OpHex		(x,	1);
	MakeCode	(x=0X4BFC);
	OpHex		(x,	1);
	MakeComm	(0X4C0A,	"DOS - PRINT STRING\nDS:DX -> string terminated by \"$\"");
	MakeCode	(x=0X4C0A);
	OpHex		(x,	0);
	MakeComm	(0X4C16,	"DOS - PRINT STRING\nDS:DX -> string terminated by \"$\"");
	MakeCode	(x=0X4C16);
	OpHex		(x,	0);
	MakeComm	(0X4C22,	"DOS - PRINT STRING\nDS:DX -> string terminated by \"$\"");
	MakeCode	(x=0X4C22);
	OpHex		(x,	0);
	MakeCode	(x=0X4C24);
	OpHex		(x,	1);
	MakeComm	(0X4C27,	"DOS - 2+ - QUIT WITH EXIT CODE (EXIT)\nAL = exit code");
	MakeCode	(x=0X4C27);
	OpHex		(x,	0);
	MakeCode	(0X4C29);
	MakeCode	(0X4C2A);
	MakeName	(0X4C2A,	"getDosKeyInput");
	MakeComm	(0X4C34,	"DOS - BUFFERED KEYBOARD INPUT\nDS:DX -> buffer");
	MakeCode	(x=0X4C34);
	OpHex		(x,	0);
	MakeCode	(x=0X4C42);
	OpHex		(x,	1);
	MakeCode	(0X4C48);
	MakeCode	(0X4C57);
	MakeCode	(0X4C58);
	MakeCode	(0X4C59);
	MakeCode	(0X4C5A);
	MakeCode	(0X4C5B);
	MakeWord	(0X4C6E);
	MakeByte	(0X4C70);
	MakeArray	(0X4C70,	0X19);
	MakeCode	(0X4C89);
	MakeComm	(0X4C97,	"DOS - 2+ - FIND FIRST ASCIZ (FINDFIRST)\nCX = search attributes\nDS:DX -> ASCIZ filespec\n(drive, path, and wildcards allowed)");
	MakeCode	(x=0X4C97);
	OpHex		(x,	0);
	MakeCode	(x=0X4CAB);
	OpHex		(x,	1);
	MakeComm	(0X4CAD,	"DOS - 2+ - ALLOCATE MEMORY\nBX = number of 16-byte paragraphs desired");
	MakeCode	(x=0X4CAD);
	OpHex		(x,	0);
	MakeComm	(0X4CBF,	"DOS - 2+ - LOAD OR EXECUTE (EXEC)\nDS:DX -> ASCIZ filename\nES:BX -> parameter block\nAL = subfunc: called by MSC spawn(P_NOWAIT,...) when running DOS 4.x.");
	MakeCode	(x=0X4CBF);
	OpHex		(x,	0);
	MakeCode	(0X4CD9);
	MakeCode	(x=0X4CE0);
	OpHex		(x,	1);
	MakeComm	(0X4CE2,	"DOS - PRINT STRING\nDS:DX -> string terminated by \"$\"");
	MakeCode	(x=0X4CE2);
	OpHex		(x,	0);
	MakeCode	(x=0X4CE4);
	OpHex		(x,	1);
	MakeComm	(0X4CE7,	"DOS - 2+ - QUIT WITH EXIT CODE (EXIT)\nAL = exit code");
	MakeCode	(x=0X4CE7);
	OpHex		(x,	0);
	MakeStr		(0X4CE9,	0X4CF3);
	MakeName	(0X4CE9,	"aAdlib_ovl");
	MakeStr		(0X4CF3,	0X4CFD);
	MakeName	(0X4CF3,	"aBleep_ovl");
	MakeStr		(0X4CFD,	0X4D07);
	MakeName	(0X4CFD,	"aAdlib_bin");
	MakeStr		(0X4D07,	0X4D10);
	MakeName	(0X4D07,	"aBmus_bin");
	MakeDword	(0X4D10);
	MakeCode	(0X4D14);
	MakeCode	(0X4D2D);
	MakeCode	(0X4D59);
	MakeByte	(0X4D5A);
	MakeArray	(0X4D5A,	0X26F);
	MakeName	(0X4D5A,	"aPalette");
	MakeByte	(0X4FC9);
	MakeArray	(0X4FC9,	0X91);
	MakeCode	(0X505A);
	MakeName	(0X505A,	"videoStatus");
	MakeComm	(0X5076,	"Video status bits:\n0: retrace.  1=display is in vert or horiz retrace.\n1: 1=light pen is triggered; 0=armed\n2: 1=light pen switch is open; 0=closed\n3: 1=vertical sync pulse is occurring.");
	MakeCode	(x=0X5077);
	OpHex		(x,	1);
	MakeCode	(0X508E);
	MakeWord	(0X5099);
	MakeByte	(0X509B);
	MakeCode	(0X509C);
	MakeCode	(0X50A4);
	MakeCode	(x=0X50BA);
	OpHex		(x,	1);
	MakeCode	(0X5100);
	MakeCode	(0X5108);
	MakeCode	(x=0X511B);
	OpHex		(x,	1);
	MakeCode	(0X516C);
	MakeCode	(x=0X517F);
	OpHex		(x,	1);
	MakeCode	(0X51A9);
	MakeCode	(x=0X51B0);
	OpHex		(x,	1);
	MakeCode	(x=0X51B2);
	OpHex		(x,	1);
	MakeCode	(x=0X51B4);
	OpHex		(x,	1);
	MakeCode	(x=0X51B6);
	OpHex		(x,	1);
	MakeCode	(x=0X51C2);
	OpHex		(x,	1);
	MakeCode	(x=0X51C4);
	OpHex		(x,	1);
	MakeCode	(x=0X51C6);
	OpHex		(x,	1);
	MakeCode	(x=0X51D3);
	OpHex		(x,	1);
	MakeCode	(x=0X51D5);
	OpHex		(x,	1);
	MakeCode	(0X52F7);
	MakeCode	(0X52FC);
	MakeCode	(0X5316);
	MakeCode	(x=0X5327);
	OpHex		(x,	1);
	MakeCode	(0X532F);
	MakeCode	(0X53C5);
	MakeCode	(0X53CA);
	MakeCode	(0X5469);
	MakeCode	(0X546F);
	MakeCode	(x=0X5483);
	OpHex		(x,	1);
	MakeCode	(0X548D);
	MakeCode	(x=0X5491);
	OpHex		(x,	1);
	MakeCode	(0X5498);
	MakeCode	(0X54C5);
	MakeName	(0X54C5,	"bc1sub4IfFalse");
	MakeCode	(0X54CD);
	MakeCode	(0X5911);
	MakeCode	(0X5936);
	MakeCode	(0X5948);
	MakeCode	(0X595A);
	MakeCode	(0X5996);
	MakeCode	(x=0X59AE);
	OpHex		(x,	1);
	MakeCode	(x=0X59B2);
	OpHex		(x,	1);
	MakeCode	(0X59C2);
	MakeCode	(0X59E7);
	MakeCode	(0X5A0C);
	MakeCode	(0X5A30);
	MakeCode	(0X5A4C);
	MakeCode	(0X5A5D);
	MakeCode	(x=0X5A63);
	OpHex		(x,	1);
	MakeCode	(0X5A8A);
	MakeCode	(0X5A8B);
	MakeCode	(x=0X5A96);
	OpHex		(x,	1);
	MakeCode	(x=0X5A98);
	OpHex		(x,	1);
	MakeCode	(0X5ABF);
	MakeByte	(0X5AC0);
	MakeArray	(0X5AC0,	0X10C);
	MakeCode	(0X5BCC);
	MakeCode	(0X5BDD);
	MakeCode	(0X5C10);
	MakeCode	(0X5C18);
	MakeCode	(0X5C22);
	MakeCode	(0X5C7A);
	MakeCode	(0X5CBC);
	MakeCode	(0X5D02);
	MakeCode	(x=0X5D1B);
	OpHex		(x,	1);
	MakeCode	(x=0X5D1D);
	OpHex		(x,	1);
	MakeCode	(0X5DB6);
	MakeCode	(0X5DC1);
	MakeCode	(x=0X5DD6);
	OpHex		(x,	1);
	MakeCode	(x=0X5DD8);
	OpHex		(x,	1);
	MakeCode	(0X5DF8);
	MakeCode	(0X5E00);
	MakeCode	(x=0X5E15);
	OpHex		(x,	1);
	MakeCode	(x=0X5E17);
	OpHex		(x,	1);
	MakeByte	(0X5E35);
	MakeArray	(0X5E35,	0X79);
	MakeCode	(0X5EAE);
	MakeCode	(x=0X5EBE);
	OpHex		(x,	1);
	MakeCode	(x=0X5ED2);
	OpHex		(x,	1);
	MakeCode	(x=0X5ED4);
	OpHex		(x,	1);
	MakeCode	(x=0X5EDA);
	OpHex		(x,	1);
	MakeCode	(x=0X5EE8);
	OpHex		(x,	1);
	MakeCode	(x=0X5EEA);
	OpHex		(x,	1);
	MakeCode	(x=0X5EF1);
	OpHex		(x,	1);
	MakeCode	(0X5F0C);
	MakeName	(0X5F0C,	"bcsub14IfTrue");
	MakeCode	(0X5F31);
	MakeName	(0X5F31,	"bc1sub13IfTrue");
	MakeCode	(0X5F39);
	MakeCode	(0X5F46);
	MakeCode	(0X5F4B);
	MakeCode	(0X5F75);
	MakeCode	(x=0X5F84);
	OpHex		(x,	1);
	MakeCode	(x=0X5F86);
	OpHex		(x,	1);
	MakeCode	(0X5FA3);
	MakeCode	(x=0X5FCD);
	OpHex		(x,	1);
	MakeCode	(x=0X5FCF);
	OpHex		(x,	1);
	MakeByte	(0X5FF8);
	MakeArray	(0X5FF8,	0X7);
	MakeCode	(0X5FFF);
	MakeName	(0X5FFF,	"bc1sub12");
	MakeCode	(0X6009);
	MakeCode	(0X6018);
	MakeCode	(x=0X6044);
	OpHex		(x,	1);
	MakeCode	(x=0X6046);
	OpHex		(x,	1);
	MakeCode	(x=0X6064);
	OpHex		(x,	1);
	MakeCode	(x=0X6066);
	OpHex		(x,	1);
	MakeByte	(0X6072);
	MakeArray	(0X6072,	0X3);
	MakeCode	(0X6075);
	MakeCode	(0X60DD);
	MakeByte	(0X60FA);
	MakeArray	(0X60FA,	0X11D);
	MakeCode	(0X6217);
	MakeCode	(x=0X6223);
	OpHex		(x,	1);
	MakeCode	(x=0X625F);
	OpHex		(x,	1);
	MakeCode	(0X6271);
	MakeCode	(0X6279);
	MakeCode	(0X6281);
	MakeCode	(x=0X628F);
	OpHex		(x,	1);
	MakeCode	(x=0X6291);
	OpHex		(x,	1);
	MakeCode	(x=0X6293);
	OpHex		(x,	1);
	MakeCode	(x=0X629D);
	OpHex		(x,	1);
	MakeCode	(x=0X629F);
	OpHex		(x,	1);
	MakeCode	(x=0X62A1);
	OpHex		(x,	1);
	MakeCode	(x=0X62F4);
	OpHex		(x,	1);
	MakeCode	(0X631F);
	MakeCode	(0X6323);
	MakeCode	(0X632D);
	MakeCode	(0X638C);
	MakeName	(0X638C,	"bc1sub1IfFalse");
	MakeCode	(x=0X6395);
	OpHex		(x,	1);
	MakeCode	(0X63B8);
	MakeCode	(0X63DC);
	MakeCode	(0X63F0);
	MakeCode	(0X63FD);
	MakeCode	(0X640A);
	MakeCode	(0X6418);
	MakeCode	(0X6459);
	MakeCode	(x=0X6469);
	OpHex		(x,	1);
	MakeCode	(x=0X646B);
	OpHex		(x,	1);
	MakeCode	(0X649F);
	MakeName	(0X649F,	"bc1sub3IfFalse");
	MakeCode	(x=0X64BA);
	OpHex		(x,	1);
	MakeCode	(x=0X64BC);
	OpHex		(x,	1);
	MakeCode	(x=0X64D2);
	OpHex		(x,	1);
	MakeCode	(x=0X64FA);
	OpHex		(x,	1);
	MakeByte	(0X6529);
	MakeArray	(0X6529,	0X2);
	MakeCode	(0X652B);
	MakeCode	(0X6537);
	MakeByte	(0X6550);
	MakeArray	(0X6550,	0X3);
	MakeCode	(0X6553);
	MakeCode	(0X655A);
	MakeCode	(0X6561);
	MakeCode	(x=0X657F);
	OpHex		(x,	1);
	MakeCode	(x=0X65B5);
	OpHex		(x,	1);
	MakeCode	(x=0X65BB);
	OpHex		(x,	1);
	MakeCode	(x=0X65CA);
	OpHex		(x,	1);
	MakeCode	(0X6626);
	MakeName	(0X6626,	"bc1sub5");
	MakeCode	(x=0X6636);
	OpHex		(x,	1);
	MakeCode	(x=0X6648);
	OpHex		(x,	1);
	MakeCode	(x=0X664A);
	OpHex		(x,	1);
	MakeCode	(x=0X664C);
	OpHex		(x,	1);
	MakeCode	(x=0X664E);
	OpHex		(x,	1);
	MakeCode	(x=0X6656);
	OpHex		(x,	1);
	MakeCode	(x=0X666A);
	OpHex		(x,	1);
	MakeCode	(0X6675);
	MakeCode	(x=0X667C);
	OpHex		(x,	1);
	MakeCode	(0X6685);
	MakeCode	(0X669A);
	MakeCode	(x=0X66A6);
	OpHex		(x,	1);
	MakeComm	(0X66AA,	"Trap to Debugger");
	MakeCode	(x=0X66AA);
	OpHex		(x,	0);
	MakeCode	(0X66B1);
	MakeCode	(0X66B6);
	MakeCode	(0X66BB);
	MakeCode	(0X66C0);
	MakeCode	(0X66C6);
	MakeCode	(0X66CC);
	MakeCode	(0X66D2);
	MakeCode	(0X66D8);
	MakeCode	(x=0X66DD);
	OpHex		(x,	1);
	MakeCode	(0X66EA);
	MakeCode	(0X66F7);
	MakeCode	(x=0X66FB);
	OpHex		(x,	1);
	MakeCode	(x=0X6701);
	OpHex		(x,	1);
	MakeCode	(x=0X6703);
	OpHex		(x,	1);
	MakeCode	(x=0X6705);
	OpHex		(x,	1);
	MakeCode	(x=0X6707);
	OpHex		(x,	1);
	MakeCode	(x=0X6711);
	OpHex		(x,	1);
	MakeCode	(x=0X6718);
	OpHex		(x,	1);
	MakeCode	(0X6722);
	MakeCode	(0X6729);
	MakeCode	(x=0X6736);
	OpHex		(x,	1);
	MakeCode	(0X675D);
	MakeCode	(0X6798);
	MakeCode	(0X67C3);
	MakeCode	(x=0X67E1);
	OpHex		(x,	1);
	MakeCode	(0X67EF);
	MakeCode	(0X681C);
	MakeCode	(0X6855);
	MakeCode	(0X687D);
	MakeCode	(0X6881);
	MakeCode	(0X6885);
	MakeCode	(0X6890);
	MakeCode	(0X68A8);
	MakeCode	(x=0X68B4);
	OpHex		(x,	1);
	MakeCode	(x=0X68B6);
	OpHex		(x,	1);
	MakeCode	(x=0X68BD);
	OpHex		(x,	1);
	MakeCode	(x=0X68BF);
	OpHex		(x,	1);
	MakeCode	(x=0X68C9);
	OpHex		(x,	1);
	MakeCode	(x=0X68CE);
	OpHex		(x,	1);
	MakeCode	(x=0X68D3);
	OpHex		(x,	1);
	MakeCode	(0X68DA);
	MakeCode	(0X6900);
	MakeCode	(0X6901);
	MakeCode	(x=0X6908);
	OpHex		(x,	1);
	MakeCode	(0X692A);
	MakeCode	(0X693A);
	MakeCode	(x=0X694E);
	OpHex		(x,	1);
	MakeCode	(x=0X6967);
	OpHex		(x,	1);
	MakeCode	(x=0X6969);
	OpHex		(x,	1);
	MakeCode	(x=0X6970);
	OpHex		(x,	1);
	MakeCode	(x=0X6972);
	OpHex		(x,	1);
	MakeCode	(x=0X6979);
	OpHex		(x,	1);
	MakeCode	(x=0X697F);
	OpHex		(x,	1);
	MakeCode	(x=0X6995);
	OpHex		(x,	1);
	MakeCode	(0X69C1);
	MakeCode	(0X6A08);
	MakeCode	(x=0X6A5E);
	OpHex		(x,	1);
	MakeCode	(0X6A76);
	MakeCode	(x=0X6A92);
	OpHex		(x,	1);
	MakeCode	(0X6A9E);
	MakeCode	(0X6AC9);
	MakeCode	(0X6AF5);
	MakeCode	(0X6B0C);
	MakeCode	(x=0X6B17);
	OpHex		(x,	1);
	MakeCode	(x=0X6B20);
	OpHex		(x,	1);
	MakeCode	(x=0X6B29);
	OpHex		(x,	1);
	MakeCode	(0X6B31);
	MakeCode	(x=0X6B34);
	OpHex		(x,	1);
	MakeCode	(0X6B55);
	MakeCode	(0X6B59);
	MakeCode	(0X6B5D);
	MakeCode	(0X6B63);
	MakeCode	(0X6B8F);
	MakeCode	(x=0X6B91);
	OpHex		(x,	1);
	MakeCode	(x=0X6B93);
	OpHex		(x,	1);
	MakeCode	(x=0X6B95);
	OpHex		(x,	1);
	MakeCode	(x=0X6BA2);
	OpHex		(x,	1);
	MakeCode	(x=0X6BA4);
	OpHex		(x,	1);
	MakeCode	(x=0X6BA6);
	OpHex		(x,	1);
	MakeCode	(0X6BB7);
	MakeCode	(0X6BB8);
	MakeCode	(x=0X6BE0);
	OpHex		(x,	1);
	MakeCode	(x=0X6BE2);
	OpHex		(x,	1);
	MakeCode	(x=0X6BEB);
	OpHex		(x,	1);
	MakeCode	(x=0X6BED);
	OpHex		(x,	1);
	MakeCode	(x=0X6C06);
	OpHex		(x,	1);
	MakeCode	(x=0X6C09);
	OpHex		(x,	1);
	MakeCode	(x=0X6C0B);
	OpHex		(x,	1);
	MakeCode	(x=0X6C0D);
	OpHex		(x,	1);
	MakeCode	(x=0X6C13);
	OpHex		(x,	1);
	MakeCode	(x=0X6C15);
	OpHex		(x,	1);
	MakeCode	(0X6C45);
	MakeCode	(0X6CA0);
	MakeName	(0X6CA0,	"bc1sub7");
	MakeCode	(x=0X6CAD);
	OpHex		(x,	1);
	MakeCode	(0X6CB7);
	MakeCode	(0X6CD0);
	MakeCode	(x=0X6CE0);
	OpHex		(x,	1);
	MakeCode	(0X6D13);
	MakeCode	(0X6D16);
	MakeCode	(x=0X6D26);
	OpHex		(x,	1);
	MakeByte	(0X6D34);
	MakeCode	(0X6D35);
	MakeCode	(0X6D59);
	MakeCode	(0X6D6D);
	MakeCode	(0X6D81);
	MakeCode	(x=0X6D9F);
	OpHex		(x,	1);
	MakeCode	(0X6DC1);
	MakeCode	(0X6DCA);
	MakeByte	(0X6DCB);
	MakeArray	(0X6DCB,	0XA);
	MakeCode	(0X6DD5);
	MakeCode	(x=0X6DEA);
	OpHex		(x,	1);
	MakeCode	(x=0X6DEC);
	OpHex		(x,	1);
	MakeCode	(0X6E08);
	MakeCode	(0X6E1D);
	MakeCode	(0X6E37);
	MakeCode	(x=0X6E45);
	OpHex		(x,	1);
	MakeByte	(0X6E7A);
	MakeCode	(0X6E7B);
	MakeByte	(0X6E94);
	MakeArray	(0X6E94,	0X28);
	MakeCode	(0X6EBC);
	MakeName	(0X6EBC,	"bc1sub8");
	MakeCode	(x=0X6ED4);
	OpHex		(x,	1);
	MakeCode	(x=0X6ED6);
	OpHex		(x,	1);
	MakeCode	(x=0X6EDD);
	OpHex		(x,	1);
	MakeCode	(0X6EE9);
	MakeWord	(0X6EF8);
	MakeCode	(0X6EFD);
	MakeByte	(0X6F03);
	MakeByte	(0X6F06);
	MakeCode	(0X703A);
	MakeName	(0X703A,	"gameLoop");
	MakeCode	(0X7042);
	MakeName	(0X7042,	"glSub1");
	MakeCode	(0X704A);
	MakeCode	(0X7059);
	MakeName	(0X7059,	"glSub1b2");
	MakeByte	(0X7081);
	MakeArray	(0X7081,	0X2);
	MakeCode	(0X7083);
	MakeName	(0X7083,	"glSub2");
	MakeCode	(0X709C);
	MakeCode	(0X70A1);
	MakeCode	(x=0X70BB);
	OpHex		(x,	1);
	MakeCode	(x=0X70DB);
	OpHex		(x,	1);
	MakeCode	(0X70EE);
	MakeName	(0X70EE,	"glSub2_related1");
	MakeCode	(x=0X70FE);
	OpHex		(x,	1);
	MakeCode	(0X712C);
	MakeCode	(0X7134);
	MakeName	(0X7134,	"glSub2_related2");
	MakeCode	(0X7141);
	MakeName	(0X7141,	"glSub1_related1");
	MakeByte	(0X714E);
	MakeCode	(0X714F);
	MakeName	(0X714F,	"glSub1_related2");
	MakeCode	(0X715A);
	MakeCode	(0X7187);
	MakeCode	(0X719B);
	MakeCode	(0X719F);
	MakeName	(0X719F,	"glSub1_related3");
	MakeCode	(x=0X71A1);
	OpHex		(x,	1);
	MakeCode	(0X71A7);
	MakeCode	(x=0X71A9);
	OpHex		(x,	1);
	MakeCode	(0X71AF);
	MakeCode	(0X71C1);
	MakeCode	(0X71CF);
	MakeName	(0X71CF,	"bc1sub9");
	MakeCode	(x=0X71E8);
	OpHex		(x,	1);
	MakeCode	(x=0X71EF);
	OpHex		(x,	1);
	MakeCode	(0X7224);
	MakeCode	(0X722D);
	MakeCode	(0X723D);
	MakeCode	(0X725D);
	MakeCode	(0X7264);
	MakeCode	(x=0X726A);
	OpHex		(x,	1);
	MakeCode	(0X727F);
	MakeCode	(0X7285);
	MakeCode	(x=0X7286);
	OpHex		(x,	1);
	MakeCode	(x=0X728C);
	OpHex		(x,	1);
	MakeCode	(x=0X728E);
	OpHex		(x,	1);
	MakeCode	(x=0X7290);
	OpHex		(x,	1);
	MakeCode	(x=0X7296);
	OpHex		(x,	1);
	MakeCode	(x=0X7298);
	OpHex		(x,	1);
	MakeCode	(x=0X729A);
	OpHex		(x,	1);
	MakeCode	(x=0X729E);
	OpHex		(x,	1);
	MakeCode	(0X72A2);
	MakeName	(0X72A2,	"comp3E8");
	MakeCode	(0X72AE);
	MakeCode	(0X72C5);
	MakeCode	(0X72CB);
	MakeCode	(0X72CF);
	MakeCode	(0X72D3);
	MakeCode	(0X72DF);
	MakeCode	(0X72E3);
	MakeCode	(0X731E);
	MakeCode	(0X732C);
	MakeCode	(0X733A);
	MakeCode	(0X733F);
	MakeCode	(x=0X7343);
	OpHex		(x,	1);
	MakeCode	(0X735F);
	MakeCode	(0X7365);
	MakeCode	(0X7373);
	MakeCode	(0X737F);
	MakeCode	(x=0X7383);
	OpHex		(x,	1);
	MakeCode	(0X738B);
	MakeCode	(0X7394);
	MakeCode	(0X7399);
	MakeCode	(x=0X73A4);
	OpHex		(x,	1);
	MakeCode	(x=0X73A6);
	OpHex		(x,	1);
	MakeCode	(x=0X73AD);
	OpHex		(x,	1);
	MakeCode	(x=0X73AF);
	OpHex		(x,	1);
	MakeCode	(0X73B5);
	MakeCode	(x=0X73BB);
	OpHex		(x,	1);
	MakeCode	(x=0X73BD);
	OpHex		(x,	1);
	MakeCode	(x=0X73BF);
	OpHex		(x,	1);
	MakeCode	(x=0X73C1);
	OpHex		(x,	1);
	MakeCode	(x=0X73C3);
	OpHex		(x,	1);
	MakeCode	(0X73D2);
	MakeCode	(0X73DC);
	MakeCode	(0X73DF);
	MakeCode	(0X73ED);
	MakeCode	(0X73F0);
	MakeCode	(0X7407);
	MakeCode	(0X740A);
	MakeCode	(0X7418);
	MakeCode	(0X7431);
	MakeCode	(0X7434);
	MakeName	(0X7434,	"testForAngleBrackets");
	MakeCode	(0X7446);
	MakeName	(0X7446,	"testForAngleBrackets2");
	MakeCode	(0X7457);
	MakeCode	(0X745E);
	MakeCode	(0X7465);
	MakeCode	(0X7468);
	MakeCode	(0X7477);
	MakeCode	(0X7489);
	MakeCode	(0X748C);
	MakeCode	(0X74A4);
	MakeCode	(0X74AA);
	MakeCode	(0X74B8);
	MakeCode	(0X74BB);
	MakeCode	(0X74C5);
	MakeCode	(0X74C8);
	MakeCode	(0X74D8);
	MakeCode	(0X74F2);
	MakeCode	(0X74F9);
	MakeCode	(0X750E);
	MakeCode	(0X7522);
	MakeCode	(x=0X7527);
	OpHex		(x,	1);
	MakeCode	(0X7547);
	MakeCode	(0X754A);
	MakeCode	(x=0X755C);
	OpHex		(x,	1);
	MakeCode	(0X7579);
	MakeCode	(0X757C);
	MakeCode	(0X759E);
	MakeCode	(0X75B9);
	MakeCode	(0X75C5);
	MakeCode	(0X75C8);
	MakeCode	(x=0X75E6);
	OpHex		(x,	1);
	MakeCode	(x=0X75EF);
	OpHex		(x,	1);
	MakeCode	(0X75F8);
	MakeCode	(0X75FB);
	MakeCode	(0X761A);
	MakeCode	(0X7634);
	MakeCode	(x=0X7636);
	OpHex		(x,	1);
	MakeCode	(0X7640);
	MakeCode	(x=0X765E);
	OpHex		(x,	1);
	MakeCode	(x=0X766B);
	OpHex		(x,	1);
	MakeCode	(0X7674);
	MakeCode	(0X7677);
	MakeCode	(0X769A);
	MakeCode	(0X76B8);
	MakeCode	(x=0X76BA);
	OpHex		(x,	1);
	MakeCode	(0X76C4);
	MakeCode	(x=0X76E2);
	OpHex		(x,	1);
	MakeCode	(x=0X76EF);
	OpHex		(x,	1);
	MakeCode	(0X76F8);
	MakeCode	(0X76FB);
	MakeCode	(0X771E);
	MakeCode	(0X773C);
	MakeCode	(x=0X773E);
	OpHex		(x,	1);
	MakeCode	(0X7748);
	MakeCode	(0X7754);
	MakeCode	(0X7757);
	MakeCode	(0X7763);
	MakeCode	(0X7766);
	MakeCode	(0X777F);
	MakeCode	(0X7782);
	MakeCode	(0X779B);
	MakeCode	(0X779E);
	MakeCode	(0X77AC);
	MakeCode	(0X77C6);
	MakeCode	(x=0X77CB);
	OpHex		(x,	1);
	MakeCode	(0X77D9);
	MakeCode	(0X77DC);
	MakeCode	(0X77EC);
	MakeCode	(0X77F5);
	MakeCode	(0X780F);
	MakeCode	(0X7812);
	MakeCode	(0X7822);
	MakeCode	(0X7825);
	MakeCode	(0X783B);
	MakeCode	(0X7844);
	MakeCode	(0X7859);
	MakeCode	(0X785C);
	MakeCode	(0X7883);
	MakeCode	(0X7886);
	MakeCode	(0X78A5);
	MakeCode	(0X78A8);
	MakeCode	(0X78B7);
	MakeCode	(0X78BA);
	MakeCode	(0X78C2);
	MakeCode	(0X78CF);
	MakeCode	(0X78D2);
	MakeCode	(0X78E5);
	MakeCode	(0X78E8);
	MakeCode	(0X78F9);
	MakeCode	(0X78FC);
	MakeCode	(0X790C);
	MakeCode	(0X790F);
	MakeCode	(0X791E);
	MakeCode	(0X792A);
	MakeCode	(0X793B);
	MakeCode	(0X793E);
	MakeCode	(0X794C);
	MakeCode	(0X795B);
	MakeCode	(0X795E);
	MakeCode	(0X796B);
	MakeCode	(0X796E);
	MakeCode	(0X7981);
	MakeCode	(0X7984);
	MakeCode	(0X7997);
	MakeCode	(0X799A);
	MakeCode	(0X79AB);
	MakeCode	(0X79AE);
	MakeCode	(0X79BF);
	MakeCode	(0X79C2);
	MakeCode	(0X79D8);
	MakeCode	(0X79DB);
	MakeCode	(0X79FA);
	MakeCode	(0X79FD);
	MakeCode	(0X7A14);
	MakeCode	(0X7A3D);
	MakeCode	(0X7A3E);
	MakeCode	(0X7A66);
	MakeCode	(x=0X7A6B);
	OpHex		(x,	1);
	MakeCode	(0X7A8D);
	MakeCode	(x=0X7A9E);
	OpHex		(x,	1);
	MakeCode	(0X7AAC);
	MakeCode	(0X7ABC);
	MakeCode	(0X7ACC);
	MakeCode	(0X7AE1);
	MakeCode	(0X7AEE);
	MakeCode	(0X7AFC);
	MakeCode	(0X7B03);
	MakeCode	(0X7B12);
	MakeName	(0X7B13,	"doMaths");
	MakeCode	(0X7B37);
	MakeName	(0X7B37,	"doMathsEquals");
	MakeCode	(0X7B3A);
	MakeName	(0X7B3A,	"doMathsAdd");
	MakeCode	(0X7B42);
	MakeName	(0X7B42,	"doMathsSubtract");
	MakeCode	(0X7B4A);
	MakeName	(0X7B4A,	"doMathsMultiply");
	MakeCode	(0X7B51);
	MakeName	(0X7B51,	"DoMathsDivide");
	MakeName	(0X7B5B,	"doMathsEnd");
	MakeCode	(0X7B5C);
	MakeCode	(0X7B6C);
	MakeCode	(0X7B7C);
	MakeCode	(0X7B8A);
	MakeCode	(0X7B93);
	MakeCode	(0X7B9A);
	MakeCode	(0X7BA0);
	MakeCode	(0X7BA5);
	MakeCode	(0X7BB7);
	MakeCode	(x=0X7BC8);
	OpHex		(x,	1);
	MakeCode	(0X7BE3);
	MakeCode	(0X7BF2);
	MakeCode	(0X7BFA);
	MakeCode	(0X7C00);
	MakeCode	(0X7C07);
	MakeCode	(0X7C0E);
	MakeCode	(0X7C55);
	MakeCode	(0X7C76);
	MakeCode	(0X7C8B);
	MakeCode	(0X7CA2);
	MakeCode	(0X7CB9);
	MakeCode	(0X7CD1);
	MakeCode	(0X7CE8);
	MakeCode	(0X7CEF);
	MakeCode	(0X7D04);
	MakeCode	(0X7D1B);
	MakeCode	(0X7D23);
	MakeCode	(0X7D40);
	MakeCode	(0X7D55);
	MakeCode	(0X7D57);
	MakeCode	(0X7D7F);
	MakeCode	(0X7DB9);
	MakeCode	(0X7DF9);
	MakeCode	(0X7E03);
	MakeCode	(0X7E07);
	MakeCode	(0X7E11);
	MakeCode	(0X7E15);
	MakeCode	(0X7E1E);
	MakeCode	(0X7E22);
	MakeCode	(0X7E33);
	MakeCode	(0X7E37);
	MakeCode	(0X7E5D);
	MakeCode	(0X7E64);
	MakeCode	(0X7E6D);
	MakeCode	(0X7E7E);
	MakeCode	(x=0X7E87);
	OpHex		(x,	1);
	MakeCode	(x=0X7E92);
	OpHex		(x,	1);
	MakeCode	(0X7E99);
	MakeCode	(x=0X7EB4);
	OpHex		(x,	1);
	MakeCode	(0X7EC5);
	MakeCode	(x=0X7ED4);
	OpHex		(x,	1);
	MakeCode	(0X7EF4);
	MakeCode	(0X7F08);
	MakeCode	(x=0X7F0D);
	OpHex		(x,	1);
	MakeCode	(x=0X7F1B);
	OpHex		(x,	1);
	MakeCode	(x=0X7F2C);
	OpHex		(x,	1);
	MakeCode	(x=0X7F36);
	OpHex		(x,	1);
	MakeCode	(x=0X7F3F);
	OpHex		(x,	1);
	MakeCode	(0X7F4F);
	MakeCode	(0X7F68);
	MakeCode	(0X7F73);
	MakeCode	(0X7FCC);
	MakeCode	(0X7FD2);
	MakeCode	(0X7FDD);
	MakeCode	(0X7FFC);
	MakeCode	(0X8007);
	MakeCode	(0X8014);
	MakeCode	(0X801D);
	MakeCode	(x=0X8022);
	OpHex		(x,	1);
	MakeCode	(x=0X8028);
	OpHex		(x,	1);
	MakeCode	(x=0X803A);
	OpHex		(x,	1);
	MakeCode	(x=0X8048);
	OpHex		(x,	1);
	MakeCode	(0X805D);
	MakeCode	(0X8074);
	MakeCode	(0X808B);
	MakeCode	(0X8099);
	MakeCode	(0X80C9);
	MakeCode	(x=0X80CE);
	OpHex		(x,	1);
	MakeCode	(0X810A);
	MakeCode	(0X812D);
	MakeCode	(0X817F);
	MakeCode	(0X81A0);
	MakeCode	(0X81A9);
	MakeCode	(0X81BB);
	MakeCode	(0X81DF);
	MakeCode	(x=0X81EB);
	OpHex		(x,	1);
	MakeCode	(0X81EF);
	MakeCode	(x=0X8201);
	OpHex		(x,	1);
	MakeCode	(0X8213);
	MakeCode	(0X823E);
	MakeCode	(0X8252);
	MakeCode	(0X825F);
	MakeCode	(x=0X8291);
	OpHex		(x,	1);
	MakeCode	(0X829D);
	MakeCode	(0X82EC);
	MakeCode	(0X8300);
	MakeCode	(0X8305);
	MakeCode	(0X8313);
	MakeCode	(0X8321);
	MakeCode	(0X834C);
	MakeCode	(0X8359);
	MakeCode	(0X8367);
	MakeCode	(0X8387);
	MakeCode	(0X8396);
	MakeCode	(0X839C);
	MakeCode	(0X83A2);
	MakeCode	(0X83B8);
	MakeCode	(0X83C6);
	MakeStr		(0X83F1,	0X83FC);
	MakeName	(0X83F1,	"aAerial_gfx");
	MakeCode	(0X83FC);
	MakeCode	(0X844A);
	MakeCode	(x=0X845F);
	OpHex		(x,	1);
	MakeCode	(x=0X846D);
	OpHex		(x,	1);
	MakeCode	(0X847F);
	MakeCode	(0X84AA);
	MakeCode	(x=0X84BC);
	OpHex		(x,	1);
	MakeCode	(0X84D7);
	MakeCode	(0X84F4);
	MakeCode	(0X852C);
	MakeCode	(0X853B);
	MakeWord	(0X855E);
	MakeByte	(0X8560);
	MakeByte	(0X8575);
	MakeByte	(0X858A);
	MakeByte	(0X859F);
	MakeCode	(0X85B4);
	MakeCode	(0X85BE);
	MakeCode	(0X85ED);
	MakeCode	(0X85F3);
	MakeCode	(0X8608);
	MakeCode	(0X863B);
	MakeCode	(0X864D);
	MakeCode	(0X8678);
	MakeCode	(0X8690);
	MakeCode	(0X86A1);
	MakeCode	(x=0X86A6);
	OpHex		(x,	1);
	MakeCode	(0X86E5);
	MakeCode	(0X870A);
	MakeCode	(0X8725);
	MakeCode	(0X8733);
	MakeCode	(0X873F);
	MakeCode	(0X8746);
	MakeCode	(0X875D);
	MakeCode	(0X8764);
	MakeCode	(0X8773);
	MakeStr		(0X8824,	0X89BB);
	MakeName	(0X8824,	"aIAmYouAreYouAreHouArtIn");
	MakeCode	(0X89BB);
	MakeCode	(0X89C9);
	MakeCode	(0X89DE);
	MakeName	(0X89DE,	"bc1sub2IfFalse");
	MakeCode	(0X89F5);
	MakeCode	(0X8A23);
	MakeCode	(0X8A33);
	MakeCode	(0X8A3E);
	MakeName	(0X8A3E,	"testGreaterA0");
	MakeCode	(0X8A56);
	MakeName	(0X8A56,	"deflateString?");
	MakeCode	(0X8A8D);
	MakeCode	(0X8A90);
	MakeCode	(0X8A99);
	MakeCode	(0X8AA4);
	MakeName	(0X8AA4,	"checkOorHash");
	MakeCode	(0X8AB5);
	MakeCode	(0X8ACA);
	MakeCode	(0X8ADA);
	MakeCode	(0X8AEE);
	MakeName	(0X8AEE,	"doHash");
	MakeCode	(0X8B3C);
	MakeName	(0X8B3C,	"loadRuleString_0");
	MakeCode	(0X8B42);
	MakeName	(0X8B42,	"loadRuleString");
	MakeCode	(x=0X8B49);
	OpHex		(x,	1);
	MakeCode	(0X8B62);
	MakeCode	(0X8B7C);
	MakeCode	(0X8B82);
	MakeCode	(x=0X8B89);
	OpHex		(x,	1);
	MakeCode	(0X8B9F);
	MakeCode	(0X8BB7);
	MakeCode	(x=0X8BC3);
	OpHex		(x,	1);
	MakeCode	(0X8BDC);
	MakeCode	(0X8BE6);
}

static Functions_0(void) {

	MakeFunction    (0X2BBB,0X2C11);
	SetFunctionFlags(0X2BBB,0x0);
	MakeFunction    (0X2C15,0X2C34);
	SetFunctionFlags(0X2C15,0x0);
	MakeFunction    (0X2C34,0X2C40);
	SetFunctionFlags(0X2C34,0x0);
	MakeFrame(0X2C34, 0X0, 2, 0X0);
	MakeFunction    (0X2C40,0X2C46);
	SetFunctionFlags(0X2C40,0x0);
	MakeFunction    (0X2C46,0X2CA1);
	SetFunctionFlags(0X2C46,0x0);
	MakeFunction    (0X2CA1,0X2D1C);
	SetFunctionFlags(0X2CA1,0x0);
	MakeFunction    (0X2D1C,0X2D31);
	SetFunctionFlags(0X2D1C,0x0);
	MakeFunction    (0X2D98,0X2DB5);
	SetFunctionFlags(0X2D98,0x0);
	MakeFrame(0X2D98, 0X0, 2, 0X0);
	MakeFunction    (0X2DB5,0X2DBD);
	SetFunctionFlags(0X2DB5,0x0);
	MakeFunction    (0X2DBD,0X2DC6);
	SetFunctionFlags(0X2DBD,0x0);
	MakeFunction    (0X2DC6,0X2DE4);
	SetFunctionFlags(0X2DC6,0x0);
	MakeFrame(0X2DC6, 0X0, 2, 0X0);
	MakeNameEx(0X2DDF, "failToAllocateMem", SN_LOCAL);
	MakeFunction    (0X2DE4,0X2DED);
	SetFunctionFlags(0X2DE4,0x0);
	MakeFunction    (0X2DEF,0X2E11);
	SetFunctionFlags(0X2DEF,0x0);
	MakeFunction    (0X2E11,0X2E9A);
	SetFunctionFlags(0X2E11,0x2);
	MakeFrame(0X2E11, 0X0, 0, 0X0);
	MakeFunction    (0X2E9A,0X2EC5);
	SetFunctionFlags(0X2E9A,0x0);
	MakeFunction    (0X2EC5,0X2EDB);
	SetFunctionFlags(0X2EC5,0x0);
	MakeFunction    (0X2EDB,0X2F37);
	SetFunctionFlags(0X2EDB,0x0);
	MakeNameEx(0X2EE5, "bc6708IsNotOne", SN_LOCAL);
	MakeNameEx(0X2F14, "bc6708IsOne", SN_LOCAL);
	MakeFunction    (0X2F37,0X2F68);
	SetFunctionFlags(0X2F37,0x0);
	MakeFunction    (0X2FE5,0X3017);
	SetFunctionFlags(0X2FE5,0x0);
	MakeFunction    (0X3017,0X3046);
	SetFunctionFlags(0X3017,0x0);
	MakeFunction    (0X3046,0X305C);
	SetFunctionFlags(0X3046,0x0);
	MakeFrame(0X3046, 0X0, 4, 0X0);
	MakeFunction    (0X305C,0X30B6);
	SetFunctionFlags(0X305C,0x0);
	MakeFunction    (0X30B6,0X30DD);
	SetFunctionFlags(0X30B6,0x0);
	MakeFunction    (0X30DD,0X30EE);
	SetFunctionFlags(0X30DD,0x0);
	MakeFunction    (0X30EE,0X3156);
	SetFunctionFlags(0X30EE,0x0);
	MakeFunction    (0X3156,0X3184);
	SetFunctionFlags(0X3156,0x0);
	MakeFunction    (0X3184,0X31B2);
	SetFunctionFlags(0X3184,0x0);
	MakeFunction    (0X31B2,0X31FC);
	SetFunctionFlags(0X31B2,0x0);
	MakeFunction    (0X31FC,0X3240);
	SetFunctionFlags(0X31FC,0x0);
	MakeFunction    (0X3240,0X325D);
	SetFunctionFlags(0X3240,0x0);
	MakeFrame(0X3240, 0X0, 4, 0X0);
	MakeFunction    (0X325D,0X3296);
	SetFunctionFlags(0X325D,0x10);
	MakeFrame(0X325D, 0X0, 2, 0X8);
	MakeNameEx(0X328B, "loadISOMapFail", SN_LOCAL);
	MakeFunction    (0X3296,0X3311);
	SetFunctionFlags(0X3296,0x10);
	MakeFrame(0X3296, 0X0, 2, 0XA);
	MakeNameEx(0X32C6, "readLoop", SN_LOCAL);
	MakeFunction    (0X3313,0X3338);
	SetFunctionFlags(0X3313,0x0);
	MakeFrame(0X3313, 0X0, 16, 0X0);
	MakeFunction    (0X3338,0X3341);
	SetFunctionFlags(0X3338,0x0);
	MakeFunction    (0X4345,0X437A);
	SetFunctionFlags(0X4345,0x0);
	MakeFrame(0X4345, 0X0, 2, 0X0);
	MakeFunction    (0X437A,0X4389);
	SetFunctionFlags(0X437A,0x0);
	MakeFrame(0X437A, 0X0, 2, 0X0);
	MakeFunction    (0X4389,0X439A);
	SetFunctionFlags(0X4389,0x0);
	MakeFunction    (0X439A,0X43B4);
	SetFunctionFlags(0X439A,0x0);
	MakeFunction    (0X43B4,0X43F0);
	SetFunctionFlags(0X43B4,0x0);
	MakeFunction    (0X43F9,0X442A);
	SetFunctionFlags(0X43F9,0x0);
	MakeFunction    (0X442A,0X4434);
	SetFunctionFlags(0X442A,0x0);
	MakeFunction    (0X4434,0X44F1);
	SetFunctionFlags(0X4434,0x0);
	MakeFunction    (0X44F1,0X450E);
	SetFunctionFlags(0X44F1,0x0);
	MakeFunction    (0X450E,0X451A);
	SetFunctionFlags(0X450E,0x0);
	MakeFunction    (0X451A,0X4526);
	SetFunctionFlags(0X451A,0x0);
	MakeFunction    (0X4526,0X453E);
	SetFunctionFlags(0X4526,0x0);
	MakeFunction    (0X453E,0X454D);
	SetFunctionFlags(0X453E,0x0);
	MakeFunction    (0X454D,0X4577);
	SetFunctionFlags(0X454D,0x0);
	MakeFunction    (0X4577,0X45A2);
	SetFunctionFlags(0X4577,0x0);
	MakeFunction    (0X45BC,0X4615);
	SetFunctionFlags(0X45BC,0x0);
	MakeFunction    (0X4615,0X4625);
	SetFunctionFlags(0X4615,0x0);
	MakeFunction    (0X466C,0X46A5);
	SetFunctionFlags(0X466C,0x0);
	MakeNameEx(0X467B, "loadStatusData", SN_LOCAL);
	MakeFunction    (0X46A5,0X46AD);
	SetFunctionFlags(0X46A5,0x0);
	MakeFunction    (0X46F7,0X46FF);
	SetFunctionFlags(0X46F7,0x0);
	MakeFunction    (0X4739,0X475C);
	SetFunctionFlags(0X4739,0x0);
	MakeFunction    (0X4761,0X47D1);
	SetFunctionFlags(0X4761,0x0);
	MakeFunction    (0X47D7,0X482D);
	SetFunctionFlags(0X47D7,0x0);
	MakeFunction    (0X4836,0X4837);
	SetFunctionFlags(0X4836,0x0);
	MakeFunction    (0X4A36,0X4A92);
	SetFunctionFlags(0X4A36,0x0);
	MakeFunction    (0X4BCB,0X4C2A);
	SetFunctionFlags(0X4BCB,0x0);
	MakeFunction    (0X4C2A,0X4C57);
	SetFunctionFlags(0X4C2A,0x0);
	MakeFunction    (0X4C5B,0X4C6E);
	SetFunctionFlags(0X4C5B,0x0);
	MakeFunction    (0X4C89,0X4CE9);
	SetFunctionFlags(0X4C89,0x2);
	MakeFunction    (0X4D14,0X4D59);
	SetFunctionFlags(0X4D14,0x0);
	MakeFunction    (0X505A,0X5099);
	SetFunctionFlags(0X505A,0x0);
	MakeFunction    (0X509C,0X5100);
	SetFunctionFlags(0X509C,0x0);
	MakeFrame(0X509C, 0X308, 0, 0X0);
	MakeFunction    (0X5100,0X516C);
	SetFunctionFlags(0X5100,0x0);
	MakeFrame(0X5100, 0X308, 0, 0X0);
	MakeFunction    (0X516C,0X51A9);
	SetFunctionFlags(0X516C,0x0);
	MakeFrame(0X516C, 0X308, 0, 0X0);
	MakeFunction    (0X51A9,0X52FC);
	SetFunctionFlags(0X51A9,0x0);
	MakeFrame(0X51A9, 0X0, 2, 0X0);
	MakeFunction    (0X52FC,0X546F);
	SetFunctionFlags(0X52FC,0x0);
	MakeFunction    (0X546F,0X5498);
	SetFunctionFlags(0X546F,0x0);
	MakeFunction    (0X5498,0X54C5);
	SetFunctionFlags(0X5498,0x0);
	MakeFunction    (0X54C5,0X5911);
	SetFunctionFlags(0X54C5,0x0);
	MakeFunction    (0X5911,0X5936);
	SetFunctionFlags(0X5911,0x0);
	MakeFunction    (0X5936,0X5948);
	SetFunctionFlags(0X5936,0x0);
	MakeFunction    (0X5948,0X595A);
	SetFunctionFlags(0X5948,0x0);
	MakeFunction    (0X595A,0X5976);
	SetFunctionFlags(0X595A,0x0);
	MakeFunction    (0X5996,0X59C2);
	SetFunctionFlags(0X5996,0x0);
	MakeFunction    (0X59C2,0X59E7);
	SetFunctionFlags(0X59C2,0x0);
	MakeFunction    (0X59E7,0X5A0C);
	SetFunctionFlags(0X59E7,0x0);
	MakeFunction    (0X5A4C,0X5A8B);
	SetFunctionFlags(0X5A4C,0x0);
	MakeFrame(0X5A4C, 0X0, 2, 0X0);
	MakeFunction    (0X5A8B,0X5AC0);
	SetFunctionFlags(0X5A8B,0x0);
	MakeFunction    (0X5BCC,0X5C10);
	SetFunctionFlags(0X5BCC,0x0);
	MakeFunction    (0X5C10,0X5C6D);
	SetFunctionFlags(0X5C10,0x0);
	MakeFunction    (0X5C7A,0X5CBC);
	SetFunctionFlags(0X5C7A,0x0);
	MakeFunction    (0X5CBC,0X5D02);
	SetFunctionFlags(0X5CBC,0x0);
	MakeFunction    (0X5D02,0X5DC1);
	SetFunctionFlags(0X5D02,0x0);
	MakeFunction    (0X5DC1,0X5DF8);
	SetFunctionFlags(0X5DC1,0x0);
	MakeFunction    (0X5DF8,0X5E00);
	SetFunctionFlags(0X5DF8,0x0);
	MakeFrame(0X5DF8, 0X0, 2, 0X0);
	MakeFunction    (0X5E00,0X5E35);
	SetFunctionFlags(0X5E00,0x0);
	MakeFunction    (0X5EAE,0X5F0C);
	SetFunctionFlags(0X5EAE,0x0);
	MakeFunction    (0X5F0C,0X5F31);
	SetFunctionFlags(0X5F0C,0x0);
	MakeFunction    (0X5F31,0X5F75);
	SetFunctionFlags(0X5F31,0x0);
	MakeFunction    (0X5F75,0X5FA3);
	SetFunctionFlags(0X5F75,0x0);
	MakeFunction    (0X5FA3,0X5FF8);
	SetFunctionFlags(0X5FA3,0x0);
	MakeFunction    (0X5FFF,0X6064);
	SetFunctionFlags(0X5FFF,0x0);
	MakeFunction    (0X6064,0X6072);
	SetFunctionFlags(0X6064,0x0);
	MakeFunction    (0X6075,0X60DD);
	SetFunctionFlags(0X6075,0x0);
	MakeFunction    (0X60DD,0X60FA);
	SetFunctionFlags(0X60DD,0x0);
	MakeFunction    (0X6217,0X6323);
	SetFunctionFlags(0X6217,0x0);
	MakeFunction    (0X6323,0X638C);
	SetFunctionFlags(0X6323,0x0);
	MakeFunction    (0X638C,0X63F0);
	SetFunctionFlags(0X638C,0x0);
	MakeFunction    (0X63F0,0X6459);
	SetFunctionFlags(0X63F0,0x0);
	MakeFunction    (0X6459,0X649F);
	SetFunctionFlags(0X6459,0x0);
	MakeFunction    (0X649F,0X6529);
	SetFunctionFlags(0X649F,0x0);
	MakeFunction    (0X652B,0X6550);
	SetFunctionFlags(0X652B,0x0);
	MakeFrame(0X652B, 0X0, 2, 0X0);
	MakeFunction    (0X6553,0X6606);
	SetFunctionFlags(0X6553,0x0);
	MakeFunction    (0X6626,0X6672);
	SetFunctionFlags(0X6626,0x0);
	MakeFunction    (0X6685,0X669A);
	SetFunctionFlags(0X6685,0x0);
	MakeFrame(0X6685, 0X0, 2, 0X0);
	MakeFunction    (0X67EF,0X68DA);
	SetFunctionFlags(0X67EF,0x0);
	MakeFunction    (0X68DA,0X6901);
	SetFunctionFlags(0X68DA,0x0);
	MakeFunction    (0X6901,0X692B);
	SetFunctionFlags(0X6901,0x0);
	MakeFunction    (0X693A,0X69F8);
	SetFunctionFlags(0X693A,0x0);
	MakeFunction    (0X6A08,0X6A6C);
	SetFunctionFlags(0X6A08,0x0);
	MakeFrame(0X6A08, 0X0, 2, 0X0);
	MakeFunction    (0X6B8F,0X6C54);
	SetFunctionFlags(0X6B8F,0x0);
	MakeFunction    (0X6CA0,0X6DCB);
	SetFunctionFlags(0X6CA0,0x0);
	MakeFunction    (0X6DD5,0X6E94);
	SetFunctionFlags(0X6DD5,0x0);
	MakeFrame(0X6DD5, 0X0, 16, 0X0);
	MakeFunction    (0X6EBC,0X6EF8);
	SetFunctionFlags(0X6EBC,0x0);
	MakeFunction    (0X703A,0X7042);
	SetFunctionFlags(0X703A,0x0);
	MakeFunction    (0X7042,0X7081);
	SetFunctionFlags(0X7042,0x0);
	MakeNameEx(0X704A, "glSub1b1", SN_LOCAL);
	MakeNameEx(0X707B, "glSub1b3", SN_LOCAL);
	MakeFunction    (0X7083,0X70EE);
	SetFunctionFlags(0X7083,0x0);
	MakeFunction    (0X70EE,0X712C);
	SetFunctionFlags(0X70EE,0x0);
	MakeFunction    (0X712C,0X7134);
	SetFunctionFlags(0X712C,0x0);
	MakeFunction    (0X7134,0X7141);
	SetFunctionFlags(0X7134,0x0);
	MakeFunction    (0X7141,0X714E);
	SetFunctionFlags(0X7141,0x0);
	MakeFunction    (0X714F,0X719F);
	SetFunctionFlags(0X714F,0x0);
	MakeFunction    (0X719F,0X71A7);
	SetFunctionFlags(0X719F,0x0);
	MakeFunction    (0X71A7,0X71AF);
	SetFunctionFlags(0X71A7,0x0);
	MakeFunction    (0X71CF,0X7224);
	SetFunctionFlags(0X71CF,0x0);
	MakeFunction    (0X7224,0X7264);
	SetFunctionFlags(0X7224,0x0);
	MakeFunction    (0X7264,0X7285);
	SetFunctionFlags(0X7264,0x0);
	MakeFrame(0X7264, 0X0, 4, 0X0);
	MakeFunction    (0X7285,0X72A2);
	SetFunctionFlags(0X7285,0x0);
	MakeFrame(0X7285, 0X0, 2, 0X0);
	MakeFunction    (0X72A2,0X72E3);
	SetFunctionFlags(0X72A2,0x0);
	MakeFunction    (0X72E3,0X7399);
	SetFunctionFlags(0X72E3,0x0);
	MakeFrame(0X72E3, 0X0, 2, 0X0);
	MakeFunction    (0X7399,0X73B5);
	SetFunctionFlags(0X7399,0x0);
	MakeFrame(0X7399, 0X0, 2, 0X0);
	MakeFunction    (0X73B5,0X73D2);
	SetFunctionFlags(0X73B5,0x0);
	MakeFrame(0X73B5, 0X0, 2, 0X0);
	MakeFunction    (0X73D2,0X73DC);
	SetFunctionFlags(0X73D2,0x0);
	MakeFunction    (0X7434,0X7468);
	SetFunctionFlags(0X7434,0x0);
	MakeFunction    (0X7B13,0X7B5C);
	SetFunctionFlags(0X7B13,0x0);
	MakeFunction    (0X7BB7,0X7BF2);
	SetFunctionFlags(0X7BB7,0x0);
	MakeFunction    (0X7D40,0X7D57);
	SetFunctionFlags(0X7D40,0x0);
	MakeFunction    (0X823E,0X8252);
	SetFunctionFlags(0X823E,0x0);
	MakeFunction    (0X85B4,0X85ED);
	SetFunctionFlags(0X85B4,0x0);
	MakeFunction    (0X85ED,0X8608);
	SetFunctionFlags(0X85ED,0x0);
	MakeFunction    (0X863B,0X864D);
	SetFunctionFlags(0X863B,0x0);
	MakeFunction    (0X89DE,0X89F5);
	SetFunctionFlags(0X89DE,0x0);
	MakeFunction    (0X8A3E,0X8A56);
	SetFunctionFlags(0X8A3E,0x0);
	MakeFrame(0X8A3E, 0X0, 4, 0X0);
	MakeFunction    (0X8A56,0X8AA4);
	SetFunctionFlags(0X8A56,0x0);
	MakeFunction    (0X8AA4,0X8AE3);
	SetFunctionFlags(0X8AA4,0x0);
	MakeNameEx(0X8AB5, "pushIt", SN_LOCAL);
	MakeFunction    (0X8AEE,0X8B3C);
	SetFunctionFlags(0X8AEE,0x0);
	MakeFunction    (0X8B3C,0X8B7C);
	SetFunctionFlags(0X8B3C,0x0);
	MakeNameEx(0X8B58, "skipBracket", SN_LOCAL);
	MakeNameEx(0X8B62, "ifNotBracket", SN_LOCAL);
	MakeNameEx(0X8B6E, "skipBracket2", SN_LOCAL);
	MakeFunction    (0X8B7C,0X8BB7);
	SetFunctionFlags(0X8B7C,0x0);
	MakeFunction    (0X8BB7,0X8BE6);
	SetFunctionFlags(0X8BB7,0x0);
	MakeFrame(0X8BB7, 0X0, 16, 0X0);
	MakeFunction    (0X8BE6,0X8C1F);
	SetFunctionFlags(0X8BE6,0x0);
}

//------------------------------------------------------------------------
// Information about functions

static Functions(void) {

	Functions_0();
}

//------------------------------------------------------------------------
// Information about segment registers

static SegRegs(void) {
}

//------------------------------------------------------------------------
// Call all byte feature functions:

static Bytes(void) {
	Bytes_0();
}

// End of file.
